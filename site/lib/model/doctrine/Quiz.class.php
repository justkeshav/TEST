<?php

/**
 * Quiz
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    LoveToKnow
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
class Quiz extends BaseQuiz
{
   const TYPE_QUIZ   = 1;	
   const TYPE_POLL   = 2;

   const RESULT_AFTER   = 1;
   const RESULT_END     = 2;
   const RESULT_BOTH    = 3; 
   const RESULT_EMAIL   = 4;

   const SHOW_RESULTS   = 1;
   const SHOW_VALID     = 2;

   const LOGIN_ANON     = 1;
   const LOGIN_REQUIRED = 2;
   const LOGIN_OPTIONAL = 3;
   const LOGIN_AFTER    = 4;
   const LOGIN_RESULT   = 5;

   private
      $page,
      $pageCount,
      $questions,
      $answers = array();

   public function getPage()
   {
      return $this->page;
   }

   public function getQuestions()
   {	
	  $items = array();
	  
	  if ($this->page == -1)
	  {
	     $offset = 0;
	     $lastIndex = sizeof($this->questions);
	  }
	  else
	  {	
	     $offset = ($this->page - 1) * $this->questions_per_page;
	     $lastIndex = $offset + $this->questions_per_page;
	  }
		
	  for (; $offset < $lastIndex; $offset++)
	  {
		 if (isset($this->questions[$offset]))
		 {
	        $items[] = $this->questions[$offset];
			$this->getAnswers($this->questions[$offset]);
	     }
	  }
	
      return $items;
   }

   public function getAnswers($question = null)
   {
	  if(empty($question))
      {
         throw new Exception("Parameter 'question' is required.");
      }

      if (isset($this->answers[$question->id]))
      {
	     return $this->answers[$question->id];
	  }
	
	  $query = Doctrine::getTable('QuizContent')->createQuery('a')
	     ->where('a.quiz_id = ?', $this->id)
	     ->andWhere('a.parent_id = ?', $question->id);
      $answers = $query->execute();
      $this->answers[$question->id] = $answers;

      return $answers;
   }

   public function getResponseCount($question = null)
   {
	  if(empty($question))
      {
         throw new Exception("Parameter 'question' is required.");
      }
	
      $totalResponses = 0;
      foreach ($this->answers[$question->id] as $a)
      {
         $totalResponses += $a->total_count;
      }

      return $totalResponses;
   }

   public function isLastPage()
   {
      return ($this->page == $this->pageCount);
   }

   public function setPage($page)
   {
      $this->page = $page;

	  if (empty($this->questions))
	  {
	     $query = Doctrine::getTable('QuizContent')->createQuery('q')
		    ->where('q.quiz_id = ?', $this->id)
		    ->andWhere('q.parent_id = 0');
	     $this->questions = $query->execute();		
	  }
	
	  $this->pageCount = (int)(sizeof($this->questions) / $this->questions_per_page);
      if (sizeof($this->questions) % $this->questions_per_page != 0)
      {
	     $this->pageCount;
	  }
   }
}

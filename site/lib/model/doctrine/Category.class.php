<?php

/**
 * Category
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    LoveToKnow
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
class Category extends BaseCategory
{
   // lazy-loaded cache of category description
   protected $article = null;

   // lazy-loaded cache of related titles
   protected $titles = array();
 
   public function preSave($event)
   {
      if(isset($this->Title) && is_null($this->type))
      {
         $this->type = 'Category';
      }
   }
   
   public function getPublishedArticle()
   {
      $versions = $this->Article->getHistory();
      foreach ($versions as $version)
      {
         if ($version['updated_at'] <= $this->updated_at)
         {
            $publishedArticle = new Article();
            $publishedArticle->merge($version);     
            return $publishedArticle;      
         }
      }
   }

   public function getFullName()
   {
      return $this->getAncestryString('name', 'â†’');
   }

   public function getFullSlug()
   {
      return $this->getAncestryString('slug', '/');
   }

   private function getAncestryString($fieldName, $separator = ' ')
   {
      return $this->buildAncestryString($fieldName, $separator);
   }

   public function buildAncestryString($callback, $separator = ' ')
   {
      $fieldName = false;

      if(is_string($callback) && !function_exists($callback))
      {
         $fieldName = $callback;
      }

      $retVal = ($fieldName ? $this->$fieldName : call_user_func($callback, $this));
      $node = $this->getNode();

      $safetyCounter = 0;
      while($node->isValidNode() && $node->hasParent() && $safetyCounter++ < 10)
      {
         $parent = $node->getParent();
         $node = $parent->getNode();

         if($node->isRoot())
         {
            break;
         }

         $retVal = ($fieldName ? $parent->$fieldName : call_user_func($callback, $parent)) . "$separator$retVal";
      }

      return $retVal;
   }

   public function findTitlesByType($type)
   {
      if(!array_key_exists($type, $this->titles))
      {
         $this->titles[$type] = Doctrine::getTable('Title')->getByTypeQuery($type)
            ->innerJoin('t.Categories c')
            ->andWhere('c.id = ?', $this->id)
            ->execute();
      }

      return $this->titles[$type];
   }

   public function getArticles()
   {
      return $this->findTitlesByType('Article');
   }

   public function getSlideshows()
   {
      return $this->findTitlesByType('Slideshow');
   }

   public function getQuizzes()
   {
      return $this->findTitlesByType('Quiz');
   }

   public function getArticleId()
   {
      $article = Doctrine::getTable('Article')->findOneByTitleId($this->title_id);
      if ($article)
      {
         return $article->id;
      }
   }

   public function getChannel()
   {
      return Doctrine::getTable('Channel')->createQuery()->where('id = ?', $this->channel_id)->useResultCache(true)->setResultCacheHash("channel|id={$this->channel_id}")->fetchOne();
   }
}

<?php

/**
 * sfGuardUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    LoveToKnow
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
class sfGuardUser extends PluginsfGuardUser
{
   const ROLE_EDITOR  = 1;
   const ROLE_WRITER  = 2;
   const ROLE_TITLER  = 3;

   const LEVEL_GROUP_EDITOR    = 1;
   const LEVEL_SITE_EDITOR     = 2;
   const LEVEL_PREMIUM_WRITER  = 3;
   const LEVEL_RELIABLE_WRITER = 4;
   const LEVEL_NOVICE_WRITER   = 5;

   // channel permission checks

   public function getAssociatedChannels($role_id = null)
   {
      $channelList = array();

      if ($role_id != null && $this->isAdmin() == false)
      {	
   	     $channels = Doctrine::getTable("UserChannel")->createQuery('c')->where('c.user_id = ?', $this->id)->
                           addWhere('c.role_id = ?', $role_id)->execute();
         foreach ($channels as $channel)
         {
            $channelList[] = $channel->channel_id;
	     }	
	  }
	  else if ($this->isAdmin())
	  {
		 // return all channels
   	     $channels = Doctrine::getTable("Channel")->createQuery('c')->execute();
         foreach ($channels as $channel)
         {
            $channelList[] = $channel->id;
	     }		
	  }
	
	  return $channelList;
   }

   public function isAssociatedChannel($role_id = null, $channel_id = null)
   {
      if ($role_id == null || $channel_id == null)
      {
	     return false;
	  }
	  else if ($this->isAdmin())
	  {
		 // admin has access to all channels
	     return true;
	  }
	
	  $channel = Doctrine::getTable("UserChannel")->createQuery('c')->where('c.user_id = ?', $this->id)->
	                   addWhere('c.role_id = ?', $role_id)->
	                   addWhere('c.channel_id = ?', $channel_id)->execute();
	  return ( (sizeof($channel) == 0 ? false : true ) );
   }

   // role accessors

   public function getRole()
   {
      $groups = $this->getGroups();
      return $groups[0]->id;
   }

   public function isEditor()
   {
      return ( $this->getRole() == $this::ROLE_EDITOR );	
   }

   public function isWriter()
   {
      return ( $this->getRole() == $this::ROLE_WRITER );	
   }

   public function isTitler()
   {
      return ( $this->getRole() == $this::ROLE_TITLER );	
   }

   public function isAdmin()
   {
      return ( $this->is_super_admin );
   }

   // level accessors

   public function getWriterLevel()
   {
	  // editors are premium writers by default
      if ($this->isEditor())
      {
	     return $this::LEVEL_PREMIUM_WRITER;
	  }
	  else if ($this->isWriter())
	  {	
	     $permissions = $this->getPermissions();
	     return $permissions[0]->id;
	  }
	
	  return -1;
   }

   public function getEditorLevel()
   {
	  if ($this->isEditor())
	  {
	     $permissions = $this->getPermissions();
	     return $permissions[0]->id;	
      }

      return -1;
   }

   public function isGroupEditor()
   {
      return ( $this->getEditorLevel() == $this::LEVEL_GROUP_EDITOR );
   }

   public function isSiteEditor()
   {
      return ( $this->getEditorLevel() == $this::LEVEL_SITE_EDITOR );	
   }

   public function isPremiumWriter()
   {
      return ( $this->getWriterLevel() == $this::LEVEL_PREMIUM_WRITER );	
   }
  
   public function isReliableWriter()
   {
      return ( $this->getWriterLevel() == $this::LEVEL_RELIABLE_WRITER );	
   }

   public function isNoviceWriter()
   {
      return ( $this->getWriterLevel() == $this::LEVEL_NOVICE_WRITER );	
   }
				
}

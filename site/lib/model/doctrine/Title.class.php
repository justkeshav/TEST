<?php

/**
 * Title
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    LoveToKnow
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
 
class Title extends BaseTitle
{
   // title status constants
   const STATUS_QUEUED     = 'Queued';
   const STATUS_AVAILABLE  = 'Available';
   const STATUS_CLAIMED    = 'Claimed';
   const STATUS_INPROGRESS = 'InProgress';
   const STATUS_SUBMITTED  = 'Submitted';
   const STATUS_APPROVED   = 'Approved';
   const STATUS_PUBLISHED  = 'Published';
   const STATUS_REJECTED   = 'Rejected';
   const STATUS_DELETED    = 'Deleted';
   
   protected $content = null;

   public function getContent()
   {
      if(is_null($this->content))
      {
         $this->content = Doctrine::getTable($this->type)->findOneByTitleId($this->id);
      }

      return $this->content;
   }
   
   public function getPublishedContent($preview)
   {
      // if preview has been requested by an authenticated user, return the most current version
      // otherwise return the most recently published version of the content
      // returns null if invalid user on preview and/or if never publshed
      if ($this->type == 'Article' && $preview)
      {
         $user = sfContext::getInstance()->getUser()->getGuardUser();
         if ($user->isWriter() || $user->isEditor())
         {
            return $this->getContent();
         }
      }       
      
      if ($this->published_content_version)
      {
         $version = $this->getContent()->getRevision($this->published_content_version);
         $publishedContent = new $this->typeTableName;
         $publishedContent->merge($version);     

         return $publishedContent;
      }
      else
      {
         return null;
      }

   }
   
   public function getTypeClassName()
   {
      return $this->type;
   }

   public function getTypeTableName()
   {
      return Doctrine_Inflector::tableize($this->type);
   }

   public function getFullSlug()
   {
      if (count($this->Categories) >= 1)
      {
         return "{$this->Categories->getFirst()->full_slug}/{$this->slug}";
      }      
      return $this->slug;
   }
   
   public function activate($availableOn)
   {
      if ($this->status == $this::STATUS_QUEUED)
      {
         $this->status = $this::STATUS_AVAILABLE;
         $this->available_on = $availableOn;
         $this->save();
      }
   }
   
   public function claim($userId)
   {
      if ($this->status == $this::STATUS_AVAILABLE && $this->available_on <= date('Y-m-d'))
      {
         $this->status = $this::STATUS_CLAIMED;
         $this->author_user_id = $userId;         
         $this->save();
      }
      else
      {
         return 'This title is not available to claim';
      }
   }   

   public function unclaim()
   {
      if ($this->status == $this::STATUS_CLAIMED)
      {
         $this->status = $this::STATUS_AVAILABLE;
         $this->save();
      }
   }   

   public function inprogress()
   {
      if ($this->status == $this::STATUS_CLAIMED)
      {
         $this->status = $this::STATUS_INPROGRESS;
         $this->save();
      }
   }   

   public function submit()
   {
      if ($this->status == $this::STATUS_INPROGRESS || $this->status == $this::STATUS_REJECTED)
      {
         $this->status = $this::STATUS_SUBMITTED;
         $this->save();
      }
   }

   public function approve()
   {
      if ($this->status == $this::STATUS_SUBMITTED)
      {
         $this->status = $this::STATUS_APPROVED;
         $this->save();
      }
   }

   public function publish()
   {
      if ($this->status == $this::STATUS_APPROVED)
      {
         if ($this->type == 'Article')
         {
            $article = $this->getContent();
            $article->related_article_urls = $article->setRelatedArticles();
            $article->save();
         }      
         $this->status = $this::STATUS_PUBLISHED;
         $this->published_content_version = $this->getContent()->version;
         $this->save();
      }
      else
      {
         return "Title has not been approved for publishing";
      }
   }

   public function reject()
   {
      if ($this->status == $this::STATUS_SUBMITTED || $this->status == $this::STATUS_APPROVED || $this->status == $this::STATUS_PUBLISHED)
      {
         $this->status = $this::STATUS_REJECTED;
         $this->save();
      }
   }    

   public function hasBeenPublished()
   {
	  // if title has ever been published, return true
      $query = Doctrine::getTable('TitleVersion')->createQuery('v')->where('v.id = ?', $this->id)->addWhere('v.status = ?', $this::STATUS_PUBLISHED)->execute();
      return ( sizeof($query) != 0 ? true : false );
   }	
	   
}

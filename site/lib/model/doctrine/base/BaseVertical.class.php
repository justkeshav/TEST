<?php

/**
 * BaseVertical
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $url
 * @property string $abbv
 * @property integer $rank
 * @property Doctrine_Collection $Channels
 * 
 * @method string              getTitle()    Returns the current record's "title" value
 * @method string              getUrl()      Returns the current record's "url" value
 * @method string              getAbbv()     Returns the current record's "abbv" value
 * @method integer             getRank()     Returns the current record's "rank" value
 * @method Doctrine_Collection getChannels() Returns the current record's "Channels" collection
 * @method Vertical            setTitle()    Sets the current record's "title" value
 * @method Vertical            setUrl()      Sets the current record's "url" value
 * @method Vertical            setAbbv()     Sets the current record's "abbv" value
 * @method Vertical            setRank()     Sets the current record's "rank" value
 * @method Vertical            setChannels() Sets the current record's "Channels" collection
 * 
 * @package    LoveToKnow
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseVertical extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('vertical');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => '255',
             ));
        $this->hasColumn('abbv', 'string', 5, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '5',
             ));
        $this->hasColumn('rank', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Channel as Channels', array(
             'local' => 'id',
             'foreign' => 'vertical_id'));

        $defaultsort0 = new DefaultSort(array(
             'column' => 'rank',
             ));
        $this->actAs($defaultsort0);
    }
}
<?php

/**
 * BaseQuizContent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $quiz_id
 * @property string $message
 * @property integer $format
 * @property integer $image_id
 * @property string $image_link
 * @property boolean $is_valid
 * @property integer $parent_id
 * @property integer $total_count
 * @property Quiz $Quiz
 * @property Image $Image
 * 
 * @method integer     getQuizId()      Returns the current record's "quiz_id" value
 * @method string      getMessage()     Returns the current record's "message" value
 * @method integer     getFormat()      Returns the current record's "format" value
 * @method integer     getImageId()     Returns the current record's "image_id" value
 * @method string      getImageLink()   Returns the current record's "image_link" value
 * @method boolean     getIsValid()     Returns the current record's "is_valid" value
 * @method integer     getParentId()    Returns the current record's "parent_id" value
 * @method integer     getTotalCount()  Returns the current record's "total_count" value
 * @method Quiz        getQuiz()        Returns the current record's "Quiz" value
 * @method Image       getImage()       Returns the current record's "Image" value
 * @method QuizContent setQuizId()      Sets the current record's "quiz_id" value
 * @method QuizContent setMessage()     Sets the current record's "message" value
 * @method QuizContent setFormat()      Sets the current record's "format" value
 * @method QuizContent setImageId()     Sets the current record's "image_id" value
 * @method QuizContent setImageLink()   Sets the current record's "image_link" value
 * @method QuizContent setIsValid()     Sets the current record's "is_valid" value
 * @method QuizContent setParentId()    Sets the current record's "parent_id" value
 * @method QuizContent setTotalCount()  Sets the current record's "total_count" value
 * @method QuizContent setQuiz()        Sets the current record's "Quiz" value
 * @method QuizContent setImage()       Sets the current record's "Image" value
 * 
 * @package    LoveToKnow
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseQuizContent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('quiz_content');
        $this->hasColumn('quiz_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('message', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('format', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '2',
             ));
        $this->hasColumn('image_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('image_link', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('is_valid', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('parent_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('total_count', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('parent', array(
             'fields' => 
             array(
              0 => 'parent_id',
             ),
             ));
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Quiz', array(
             'local' => 'quiz_id',
             'foreign' => 'id'));

        $this->hasOne('Image', array(
             'local' => 'image_id',
             'foreign' => 'id'));

        $auditable0 = new Auditable();
        $this->actAs($auditable0);
    }
}
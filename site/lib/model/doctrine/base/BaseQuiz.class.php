<?php

/**
 * BaseQuiz
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $format
 * @property string $message
 * @property string $description1
 * @property string $description2
 * @property integer $questions_per_page
 * @property integer $result_format
 * @property integer $result_type
 * @property boolean $show_accuracy
 * @property integer $login_position
 * @property string $login_text
 * @property string $result20
 * @property string $result40
 * @property string $result60
 * @property string $result80
 * @property string $result100
 * @property Doctrine_Collection $QuizContents
 * @property Doctrine_Collection $Quizzes
 * 
 * @method integer             getFormat()             Returns the current record's "format" value
 * @method string              getMessage()            Returns the current record's "message" value
 * @method string              getDescription1()       Returns the current record's "description1" value
 * @method string              getDescription2()       Returns the current record's "description2" value
 * @method integer             getQuestionsPerPage()   Returns the current record's "questions_per_page" value
 * @method integer             getResultFormat()       Returns the current record's "result_format" value
 * @method integer             getResultType()         Returns the current record's "result_type" value
 * @method boolean             getShowAccuracy()       Returns the current record's "show_accuracy" value
 * @method integer             getLoginPosition()      Returns the current record's "login_position" value
 * @method string              getLoginText()          Returns the current record's "login_text" value
 * @method string              getResult20()           Returns the current record's "result20" value
 * @method string              getResult40()           Returns the current record's "result40" value
 * @method string              getResult60()           Returns the current record's "result60" value
 * @method string              getResult80()           Returns the current record's "result80" value
 * @method string              getResult100()          Returns the current record's "result100" value
 * @method Doctrine_Collection getQuizContents()       Returns the current record's "QuizContents" collection
 * @method Doctrine_Collection getQuizzes()            Returns the current record's "Quizzes" collection
 * @method Quiz                setFormat()             Sets the current record's "format" value
 * @method Quiz                setMessage()            Sets the current record's "message" value
 * @method Quiz                setDescription1()       Sets the current record's "description1" value
 * @method Quiz                setDescription2()       Sets the current record's "description2" value
 * @method Quiz                setQuestionsPerPage()   Sets the current record's "questions_per_page" value
 * @method Quiz                setResultFormat()       Sets the current record's "result_format" value
 * @method Quiz                setResultType()         Sets the current record's "result_type" value
 * @method Quiz                setShowAccuracy()       Sets the current record's "show_accuracy" value
 * @method Quiz                setLoginPosition()      Sets the current record's "login_position" value
 * @method Quiz                setLoginText()          Sets the current record's "login_text" value
 * @method Quiz                setResult20()           Sets the current record's "result20" value
 * @method Quiz                setResult40()           Sets the current record's "result40" value
 * @method Quiz                setResult60()           Sets the current record's "result60" value
 * @method Quiz                setResult80()           Sets the current record's "result80" value
 * @method Quiz                setResult100()          Sets the current record's "result100" value
 * @method Quiz                setQuizContents()       Sets the current record's "QuizContents" collection
 * @method Quiz                setQuizzes()            Sets the current record's "Quizzes" collection
 * 
 * @package    LoveToKnow
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseQuiz extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('quiz');
        $this->hasColumn('format', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '2',
             ));
        $this->hasColumn('message', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('description1', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('description2', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('questions_per_page', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => '2',
             ));
        $this->hasColumn('result_format', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '2',
             ));
        $this->hasColumn('result_type', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '2',
             ));
        $this->hasColumn('show_accuracy', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('login_position', 'integer', 2, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '2',
             ));
        $this->hasColumn('login_text', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('result20', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('result40', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('result60', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('result80', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('result100', 'string', null, array(
             'type' => 'string',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('QuizContent as QuizContents', array(
             'local' => 'id',
             'foreign' => 'quiz_id'));

        $this->hasMany('QuizSession as Quizzes', array(
             'local' => 'id',
             'foreign' => 'quiz_id'));

        $derivative0 = new Derivative(array(
             'base' => 'Title',
             ));
        $auditable0 = new Auditable();
        $this->actAs($derivative0);
        $this->actAs($auditable0);
    }
}
<?php

class staticCacheFilter extends sfFilter
{
   public function execute($filterChain)
   {
      // Execute next filter; we do this first so the caching code is done after the  page content is generated by later filters
      $filterChain->execute();

      // only cache if enabled in config
      if(!sfConfig::get('app_static_cache')) return;

      // only cache the prod env
      if(sfConfig::get('sf_environment') != 'prod') return;

      // no caching was requested via the query string
      if(stripos($_SERVER['QUERY_STRING'], 'no-cache') !== false) return;

      $request = $this->context->getRequest();

      // only cache GET requests
      if($request->getMethod() != sfRequest::GET) return;

      $response = $this->context->getResponse();

      // only cache successful responses
      if($response->getStatusCode() != 200) return;

      // only cache html
      if(stripos($response->getContentType(), 'text/html') === false) return;

      $content = $response->getContent();

      // dont cache empty files
      if(empty($content)) return;

      $channel = sfContext::getInstance()->get('channel')->slug;

      $path = '/index.html';

      if($_SERVER['SCRIPT_URL'] != '/')
      {
         $path = preg_replace('/^(\/(?:wiki\/)?)(([^.\/])([^.\/])?([^.\/])?.*)$/', '$1$3/$3$4/$3$4$5/$2.html', $_SERVER['SCRIPT_URL']);
         $path = str_ireplace('/.html', '/index.html', $path);
      }

      $file = sfConfig::get('sf_cache_dir') . "/static/$channel$path";

      $dir = dirname($file);

      if(!is_dir($dir))
      {
         mkdir($dir, 0770, true);
      }

      file_put_contents($file, str_ireplace('</body>', '<!-- CACHED ' . date('D, d M Y h:i:sa T') . ' --></body>', $content));
   }
}

